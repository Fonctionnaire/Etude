# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr
    images_directory: '%kernel.project_dir%/public/uploads/images'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Service\FileUploader:
        arguments:
            $targetDir: '%images_directory%'

# Form type.
    kms_froala_editor.form.type:
        class: "KMS\\FroalaEditorBundle\\Form\\Type\\FroalaEditorType"
        arguments: [ "@kernel", "@service_container", "@kms_froala_editor.option_manager", "@kms_froala_editor.plugin_provider" ]
        tags:
            - { name: "form.type", alias: "froala" }

# Plugin provider.
    kms_froala_editor.option_manager:
        class: "KMS\\FroalaEditorBundle\\Service\\OptionManager"
        arguments: [ "@router" ]

# Plugin provider.
    kms_froala_editor.plugin_provider:
        class: "KMS\\FroalaEditorBundle\\Service\\PluginProvider"

# Media manager.
    kms_froala_editor.media_manager:
        class: "KMS\\FroalaEditorBundle\\Service\\MediaManager"

# Twig extension.
    kms_froala_editor.froala_extension:
        class: "KMS\\FroalaEditorBundle\\Twig\\FroalaExtension"
        arguments: [ "@service_container" ]
        tags:
            - { name: twig.extension }

    KMS\FroalaEditorBundle\Controller\MediaController:
        public: true
        arguments:
            $mediaManager: '@kms_froala_editor.media_manager'